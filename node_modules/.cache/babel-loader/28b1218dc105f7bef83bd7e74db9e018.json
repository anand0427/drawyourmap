{"ast":null,"code":"import _regeneratorRuntime from\"/home/anand/Python/geocodingwithaddresses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/anand/Python/geocodingwithaddresses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/anand/Python/geocodingwithaddresses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/anand/Python/geocodingwithaddresses/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{MDBContainer,MDBRow,MDBCol,MDBBtn,MDBIcon,MDBInput}from'mdbreact';import{Box}from'@material-ui/core';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import{makeStyles}from'@material-ui/core/styles';import Typography from'@material-ui/core/Typography';function InputComponents(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),cityNames=_useState2[0],setCityNames=_useState2[1];var useStyles=makeStyles(function(theme){return{grow:{flexGrow:1},title:_defineProperty({display:'none'},theme.breakpoints.up('sm'),{display:'block'}),sectionDesktop:_defineProperty({display:'none'},theme.breakpoints.up('md'),{display:'flex'})};});var classes=useStyles();return React.createElement(\"div\",{className:\"App\"},React.createElement(\"div\",{className:classes.grow},React.createElement(AppBar,{postion:\"relative\"},React.createElement(Toolbar,null,React.createElement(Typography,{className:classes.title,variant:\"h5\",nowrap:true},\"Where did you go?\")))),React.createElement(\"div\",{style:{marginTop:\"90px\"}},React.createElement(Box,null,React.createElement(MDBContainer,null,React.createElement(MDBRow,null),React.createElement(MDBRow,null,React.createElement(MDBCol,null),React.createElement(MDBCol,{md:\"6\"},React.createElement(\"form\",null,React.createElement(\"p\",{className:\"text-center mb-4\"},\"Your map will open in a new tab. Right Click and save as html.\"),React.createElement(\"div\",{className:\"grey-text\"},React.createElement(MDBInput,{label:\"City Names\",group:true,type:\"text\",value:cityNames,onChange:function onChange(e){return setCityNames(e.target.value);}}),React.createElement(\"p\",{className:\"text-center mb-4\"},\"Seperate the city names with comma\"),React.createElement(MDBInput,{label:\"Dates (not implemented)\",group:true,type:\"text\"}),React.createElement(\"p\",{className:\"text-center mb-4\"},\"Seperate the dates with comma\")),React.createElement(\"div\",{className:\"text-center\"},React.createElement(MDBBtn,{outline:true,color:\"blue\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var city,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:city={cityNames:cityNames};_context.next=3;return fetch('/getCity',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(city)});case 3:response=_context.sent;if(response.ok){console.log(response);console.log(\"response\");window.open(\"map.html\",\"_blank\");}case 5:case\"end\":return _context.stop();}}},_callee);}))},\"Submit\",React.createElement(MDBIcon,{far:true,icon:\"paper-plane\",className:\"ml-1\"}))))),React.createElement(MDBCol,null))))));}export default InputComponents;","map":{"version":3,"sources":["/home/anand/Python/geocodingwithaddresses/src/inputComponents.js"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBIcon","MDBInput","Box","AppBar","Toolbar","makeStyles","Typography","InputComponents","cityNames","setCityNames","useStyles","theme","grow","flexGrow","title","display","breakpoints","up","sectionDesktop","classes","marginTop","e","target","value","city","fetch","method","headers","body","JSON","stringify","response","ok","console","log","window","open"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport {Box} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction InputComponents() {\n\nconst [cityNames, setCityNames] = useState(\"\");\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow:1\n  },\n\n  title:{\n    display:'none',\n    [theme.breakpoints.up('sm')]:{\n      display:'block',\n    },\n  },\n  sectionDesktop:{\n    display:'none',\n    [theme.breakpoints.up('md')]:{\n      display:'flex',\n    },\n  },\n}));\n\nconst classes = useStyles();\n\n  return (\n    <div className=\"App\">\n    <div className = {classes.grow}>\n    <AppBar postion=\"relative\">\n    <Toolbar>\n\n      <Typography className = {classes.title} variant = \"h5\" nowrap>\n        Where did you go?\n      </Typography>\n    </Toolbar>\n    </AppBar>\n    </div>\n    <div style={{marginTop: \"90px\"}}>\n    <Box>\n        <MDBContainer>\n        <MDBRow></MDBRow>\n          <MDBRow>\n          <MDBCol></MDBCol>\n            <MDBCol md = \"6\">\n              <form>\n                <p className=\"text-center mb-4\">Your map will open in a new tab. Right Click and save as html.</p>\n                <div className=\"grey-text\">\n\n                  <MDBInput label=\"City Names\" group type=\"text\" value = {cityNames} onChange={e => setCityNames(e.target.value)} />\n                  <p className=\"text-center mb-4\">Seperate the city names with comma</p>\n                  <MDBInput label=\"Dates (not implemented)\" group type=\"text\" />\n                  <p className=\"text-center mb-4\">Seperate the dates with comma</p>\n\n                </div>\n                <div className=\"text-center\">\n                  <MDBBtn outline color=\"blue\" onClick = {async () => {\n                    const city = {cityNames};\n                    const response = await fetch('/getCity', {\n                      method: 'POST',\n                      headers:{\n                        'Content-Type':'application/json'\n                      },\n                      body: JSON.stringify(city)\n                    })\n\n                      if (response.ok){\n                        console.log(response);\n                        console.log(\"response\");\n                        window.open(\"map.html\", \"_blank\");\n                      }\n                  }}>\n                    Submit\n                    <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCol>\n            <MDBCol></MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        </Box>\n        </div>\n      </div>\n\n  );\n}\n\nexport default InputComponents;\n"]},"metadata":{},"sourceType":"module"}