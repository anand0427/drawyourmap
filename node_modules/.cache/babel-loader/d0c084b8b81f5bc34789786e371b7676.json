{"ast":null,"code":"var _jsxFileName = \"/home/anand/Python/geocodingwithaddresses/src/inputComponents.js\";\nimport React, { useState } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Badge from '@material-ui/core/Badge';\n\nfunction InputComponents() {\n  const [cityNames, setCityNames] = useState(\"\");\n  const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex'\n      }\n    }\n  }));\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    postion: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    nowrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Where did you go?\"), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-center mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Your map will open in a new tab. Right Click and save as html.\"), React.createElement(\"div\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"City Names\",\n    group: true,\n    type: \"text\",\n    value: cityNames,\n    onChange: e => setCityNames(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"text-center mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Seperate the city names with comma\"), React.createElement(MDBInput, {\n    label: \"Dates (not implemented)\",\n    group: true,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"text-center mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Seperate the dates with comma\")), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MDBBtn, {\n    outline: true,\n    color: \"blue\",\n    onClick: async () => {\n      const city = {\n        cityNames\n      };\n      const response = await fetch('/getCity', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(city)\n      });\n\n      if (response.ok) {\n        console.log(response);\n        console.log(\"response\");\n        window.open(\"map.html\", \"_blank\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Submit\", React.createElement(MDBIcon, {\n    far: true,\n    icon: \"paper-plane\",\n    className: \"ml-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))), React.createElement(MDBCol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, cityNames));\n}\n\nexport default InputComponents;","map":{"version":3,"sources":["/home/anand/Python/geocodingwithaddresses/src/inputComponents.js"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBIcon","MDBInput","AppBar","Toolbar","makeStyles","IconButton","Typography","MenuItem","Menu","MenuIcon","MailIcon","Badge","InputComponents","cityNames","setCityNames","useStyles","theme","grow","flexGrow","title","display","breakpoints","up","sectionDesktop","classes","e","target","value","city","response","fetch","method","headers","body","JSON","stringify","ok","console","log","window","open"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,OAA/C,EAAwDC,QAAxD,QAAwE,UAAxE;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAGA,SAASC,eAAT,GAA2B;AAE3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMoB,SAAS,GAAGX,UAAU,CAACY,KAAK,KAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAC;AADL,KAD+B;AAKrCC,IAAAA,KAAK,EAAC;AACJC,MAAAA,OAAO,EAAC,MADJ;AAEJ,OAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA6B;AAC3BF,QAAAA,OAAO,EAAC;AADmB;AAFzB,KAL+B;AAWrCG,IAAAA,cAAc,EAAC;AACbH,MAAAA,OAAO,EAAC,MADK;AAEb,OAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA6B;AAC3BF,QAAAA,OAAO,EAAC;AADmB;AAFhB;AAXsB,GAAL,CAAN,CAA5B;AAmBA,QAAMI,OAAO,GAAGT,SAAS,EAAzB;AAEE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAIS,OAAO,CAACP,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAIO,OAAO,CAACL,KAAjC;AAAwC,IAAA,OAAO,EAAG,IAAlD;AAAuD,IAAA,MAAM,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAKE;AAAK,IAAA,SAAS,EAAIK,OAAO,CAACP,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAIO,OAAO,CAACD,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADA,CADA,CADA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAG,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,YAAhB;AAA6B,IAAA,KAAK,MAAlC;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAIV,SAAxD;AAAmE,IAAA,QAAQ,EAAEY,CAAC,IAAIX,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAHF,EAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,yBAAhB;AAA0C,IAAA,KAAK,MAA/C;AAAgD,IAAA,IAAI,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,CAFF,EAUE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,MAAtB;AAA6B,IAAA,OAAO,EAAI,YAAY;AAClD,YAAMC,IAAI,GAAG;AAACf,QAAAA;AAAD,OAAb;AACA,YAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAC;AACN,0BAAe;AADT,SAF+B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALiC,OAAb,CAA5B;;AAQE,UAAIC,QAAQ,CAACO,EAAb,EAAgB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAwB,QAAxB;AACD;AACJ,KAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAiBE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAVF,CADF,CAFF,EAoCE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CAFF,CADJ,CAfA,EA2DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM3B,SAAN,CA3DJ,CADF;AAgED;;AAED,eAAeD,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Badge from '@material-ui/core/Badge';\n\n\nfunction InputComponents() {\n\nconst [cityNames, setCityNames] = useState(\"\");\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow:1\n  },\n\n  title:{\n    display:'none',\n    [theme.breakpoints.up('sm')]:{\n      display:'block',\n    },\n  },\n  sectionDesktop:{\n    display:'none',\n    [theme.breakpoints.up('md')]:{\n      display:'flex',\n    },\n  },\n}));\n\nconst classes = useStyles();\n\n  return (\n    <div className=\"App\">\n    <div className = {classes.grow}>\n    <AppBar postion=\"static\">\n    <Toolbar>\n\n      <Typography className = {classes.title} variant = \"h5\" nowrap>\n        Where did you go?\n      </Typography>\n      <div className = {classes.grow} />\n      <div className = {classes.sectionDesktop}>\n\n      </div>\n    </Toolbar>\n    </AppBar>\n    </div>\n    <div>\n        <MDBContainer>\n        <MDBRow></MDBRow>\n          <MDBRow>\n          <MDBCol></MDBCol>\n            <MDBCol md = \"6\">\n              <form>\n                <p className=\"text-center mb-4\">Your map will open in a new tab. Right Click and save as html.</p>\n                <div className=\"grey-text\">\n\n                  <MDBInput label=\"City Names\" group type=\"text\" value = {cityNames} onChange={e => setCityNames(e.target.value)} />\n                  <p className=\"text-center mb-4\">Seperate the city names with comma</p>\n                  <MDBInput label=\"Dates (not implemented)\" group type=\"text\" />\n                  <p className=\"text-center mb-4\">Seperate the dates with comma</p>\n\n                </div>\n                <div className=\"text-center\">\n                  <MDBBtn outline color=\"blue\" onClick = {async () => {\n                    const city = {cityNames};\n                    const response = await fetch('/getCity', {\n                      method: 'POST',\n                      headers:{\n                        'Content-Type':'application/json'\n                      },\n                      body: JSON.stringify(city)\n                    })\n\n                      if (response.ok){\n                        console.log(response);\n                        console.log(\"response\");\n                        window.open(\"map.html\", \"_blank\");\n                      }\n                  }}>\n                    Submit\n                    <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCol>\n            <MDBCol></MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        </div>\n\n        <div>{cityNames}</div>\n      </div>\n\n  );\n}\n\nexport default InputComponents;\n"]},"metadata":{},"sourceType":"module"}